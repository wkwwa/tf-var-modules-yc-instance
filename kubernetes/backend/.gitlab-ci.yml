stages:
  - deploy

deploy-backend:
  stage: deploy
  image: bitnami/kubectl:1.30.3
  environment:
    name: production/backend
  before_script:
    - apk add docker-cli-compose openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - docker context create remote --description "remote ssh" --docker "host=ssh://${DEV_USER}@${DEV_HOST}"
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker --context remote compose
    - docker push $CI_REGISTRY_IMAGE:latest
    - kubectl apply -f deployment.yaml
    - 
    sudo /bin/sh
    - curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -s - --disable traefik
    - exit 
    - mkdir .kube
    - sudo cp /etc/rancher/k3s/k3s.yaml ./config
    - sudo chown dmistry:dmistry config
    - chmod 400 config
    - export KUBECONFIG=~/.kube/config
    - git clone 
    - scp -r ./backend ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/kuber/backend
    - scp ./backend/backend-pod.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-pod.yaml 
    - scp ./backend/backend-secrets.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-secrets.yaml 
    - scp ./backend/backend-service.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-service.yaml
    - docker --context remote kubectl apply -f backend-pod.yaml

deploy-backend-k8s:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  before_script:
    - apk add docker-cli-compose openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - docker context create remote --description "remote ssh" --docker "host=ssh://${DEV_USER}@${DEV_HOST}"
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker --context remote
    - export KUBECONFIG=~/.kube/config
    - scp ./backend/deployment.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-pod.yaml 
    - scp ./backend/secrets.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-secrets.yaml 
    - scp ./backend/service.yaml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/backend-service.yaml
    - kubectl apply -f backend-pod.yaml
    - kubectl config use-context path/to/agent/project:agent-name
    - kubectl get pods
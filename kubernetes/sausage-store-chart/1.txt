---
# Source: sausage-store-chart/charts/backend-report/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongo-report
data:
  mongo-report-url: bW9uZ29kYjovL3N0ZC1leHQtMDA2LTEwOlRlc3R1c3IxMjM0QHJjMWEteWo5N3g3eTd0cTh3dG0zcS5tZGIueWFuZGV4Y2xvdWQubmV0OjI3MDE4L3N0ZC1leHQtMDA2LTEwP3Rscz10cnVlJnRsc0FsbG93SW52YWxpZENlcnRpZmljYXRlcz10cnVlCg==
type: Opaque
---
# Source: sausage-store-chart/charts/backend/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: psql-secret
data:
  psql-user: c3RkLWV4dC0wMDYtMTA=
  psql-password: VGVzdHVzcjEyMzQ=
type: Opaque
---
# Source: sausage-store-chart/charts/backend/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
data:
  mongo-url: bW9uZ29kYjovL3N0ZC1leHQtMDA2LTEwOlRlc3R1c3IxMjM0QHJzMDEvcmMxYS15ajk3eDd5N3RxOHd0bTNxLm1kYi55YW5kZXhjbG91ZC5uZXQ6MjcwMTgvc3RkLWV4dC0wMDYtMTA/dGxzPXRydWU=
type: Opaque
---
# Source: sausage-store-chart/charts/backend/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: docker-config-secret
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaXRsYWIucHJha3Rpa3VtLXNlcnZpY2VzLnJ1OjUwNTAiOiB7CgkJCSJhdXRoIjogImMzUmtMV1Y0ZEMwd01EWXRNVEE2V1dNdFRrVTJaR1ZGUVhGV2FtUktlSHBLU25nPSIKCQl9Cgl9Cn0K
type: kubernetes.io/dockerconfigjson
---
# Source: sausage-store-chart/charts/frontend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  default.conf: |
    server {
      listen 80;
      location /api {
        proxy_pass http://backend:8080;
      }
      location / {
        root /app/frontend;
        index index.html;
      }
    }
---
# Source: sausage-store-chart/charts/backend-report/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-report
  labels:
    helm.sh/chart: backend-report-0.1.0
    app.kubernetes.io/name: backend-report
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: 8082
      protocol: TCP
  selector:
    app.kubernetes.io/name: backend-report
    app.kubernetes.io/instance: release-name
---
# Source: sausage-store-chart/charts/backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
---
# Source: sausage-store-chart/charts/frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
---
# Source: sausage-store-chart/charts/backend-report/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-report
  labels:
    helm.sh/chart: backend-report-0.1.0
    app.kubernetes.io/name: backend-report
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 12
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: backend-report
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: backend-report-0.1.0
        app.kubernetes.io/name: backend-report
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: docker-config-secret
      containers:
        - name: backend-report
          image: "gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-backend-report:1.0.1652135"
          imagePullPolicy: IfNotPresent
          env:
            - name: REPORT_PATH
              value: /tmp
            - name: REPORTS_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-report
                  key: mongo-report-url
          ports:
            - name: backend-report
              containerPort: 8082
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 0.2
              memory: 1025Mi
            requests:
              cpu: 0.1
              memory: 512Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - backend-report
              topologyKey: kubernetes.io/hostname
            weight: 10
---
# Source: sausage-store-chart/charts/backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    helm.sh/chart: backend-0.1.0
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 20%
      maxUnavailable: 0%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: backend-0.1.0
        app.kubernetes.io/name: backend
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: docker-config-secret
      containers:
        - name: backend
          image: gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-backend:1.0.1632303
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://rc1a-zinvlo2snmixqvg6.mdb.yandexcloud.net:6432/std-ext-006-10?ssl=true
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: psql-secret
                  key: psql-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: psql-secret
                  key: psql-password

            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-url

            - name: REPORT_PATH
              value: /tmp

          ports:
            - name: backend
              containerPort: 8080
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 1
---
# Source: sausage-store-chart/charts/frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: frontend-0.1.0
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: docker-config-secret
      containers:
        - name: frontend
          image: "gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-frontend:1.0.1641051"
          imagePullPolicy: IfNotPresent
          env:
            - name: NGINX_CONF
              valueFrom:
                configMapKeyRef:
                  name: nginx-conf
                  key: default.conf
                  
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-url

            - name: REPORT_PATH
              value: /tmp

          ports:
            - name: frontend
              containerPort: 80
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: nginx-conf
              readOnly: true
              subPath: default.conf
      volumes:
        - configMap:
            items:
            - key: default.conf
              path: default.conf
            name: nginx-conf
          name: nginx-conf
---
# Source: sausage-store-chart/charts/frontend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend
  labels:
    helm.sh/chart: frontend-0.1.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "std-ext-006-38.k8s.praktikum-services.tech"
      secretName: 
  rules:
    - host: "std-ext-006-38.k8s.praktikum-services.tech"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
---
# Source: sausage-store-chart/charts/backend/templates/secrets.yaml
# Секрет, необходимый, чтобы взаимодействовать с Docker Registry в GitLab:
---
# Source: sausage-store-chart/charts/backend/templates/vpa.yaml
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: backend
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: backend
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: '*'
      controlledResources:
      - cpu
      - memory
      controlledValues: RequestsAndLimits
      maxAllowed:
        cpu: 1
        memory: 500Mi
      minAllowed:
        cpu: 0m
        memory: 0Mi

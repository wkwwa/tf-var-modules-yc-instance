global:
  psqlSecret:
    psqlDatabase: ${psqlDatabase}
    psqlUser: ${psqlUser}
    psqlPassword: ${psqlPassword}

  mongoSecret:
    mongoUrl: ${mongoUrl}

  dockerConfigSecret:
    dockerconfigjson: ${dockerconfigjson}

  reportPath:
    path: /tmp

  mongoReport:
    mongoReportUrl: ${mongoReportUrl}

backend:
  replicaCount: 1
  image:
    repository: gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-backend
    pullPolicy: IfNotPresent
    tag: "1.0.1632303"

  imagePullSecrets:
    - name: docker-config-secret
  nameOverride: ""
  fullnameOverride: "backend"

  service:
    type: ClusterIP
    port: 8080

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0%
      maxSurge: 20%

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6

  resourcePolicy:
    containerPolicies:
      - containerName: "*"
        minAllowed:
          cpu: 0m
          memory: 0Mi
        maxAllowed:
          cpu: 1
          memory: 500Mi
        controlledResources: ["cpu", "memory"]
        controlledValues: RequestsAndLimits

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

frontend:
  replicaCount: 1
  image:
    repository: gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-frontend
    pullPolicy: IfNotPresent
    tag: "1.0.1641051"

  imagePullSecrets:
    - name: docker-config-secret

  nameOverride: ""
  fullnameOverride: "frontend"

  service:
    type: ClusterIP
    port: 80

  configMap:
    metadata:
      name: nginx-conf
    data:
      default.conf: |
        server {
          listen 80;
          location /api {
            proxy_pass http://backend:8080;
          }
          location / {
            root /app/frontend;
            index index.html;
          }
        }

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  strategy:
    type: Recreate

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: std-ext-006-38.k8s.praktikum-services.tech
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - std-ext-006-38.k8s.praktikum-services.tech

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  volumes:
    - name: nginx-conf
      configMap:
        name: nginx-conf
        items:
          - key: default.conf
            path: default.conf

  volumeMounts:
    - name: nginx-conf
      mountPath: "/etc/nginx/conf.d/default.conf"
      subPath: default.conf
      readOnly: true

backend-report:
  replicaCount: 1
  image:
    repository: gitlab.praktikum-services.ru:5050/std-ext-006-10/sausage-store/sausage-backend-report
    pullPolicy: IfNotPresent
    tag: "1.0.1652135"

  imagePullSecrets:
    - name: docker-config-secret
  nameOverride: ""
  fullnameOverride: "backend-report"

  service:
    type: ClusterIP
    port: 8082

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75

  revisionHistoryLimit: 12

  resources:
    requests:
      memory: "512Mi"
      cpu: 0.1
    limits:
      memory: "1025Mi"
      cpu: 0.2

  strategy:
    type: Recreate

  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8082
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - backend-report
            topologyKey: "kubernetes.io/hostname"